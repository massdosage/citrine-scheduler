<?xml version="1.0" encoding="UTF-8"?>
  <!--
    Copyright 2009 Last.fm Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied. See the License for the specific language governing permissions and limitations under the
    License.
  -->
<project basedir="." default="build" name="citrine">
  
  <import file="common.xml"/>
  <import file="${ivysettings.dir}/ivy-common-targets.xml"/>
  <property name="hibernate.properties" location="${conf.dir}/citrine.properties"/>
  <property name="hibernate.conf.file" location="${conf.dir}/hibernate.cfg.xml"/>

  <property name="bin.src.dir" location="${src.dir}/bin"/>
  <property name="css.src.dir" location="${src.dir}/css"/>
  <property name="html.src.dir" location="${src.dir}/html"/>
  <property name="javascript.src.dir" location="${src.dir}/javascript"/>
  <property name="jsp.src.dir" location="${src.dir}/jsp"/>
  <property name="sql.src.dir" location="${src.dir}/sql"/>
  
  <fileset dir="${lib.dir}" id="lib.fileset">
    <include name="antlr*.jar"/>
    <include name="aop*.jar"/>
    <include name="asm*.jar"/>
    <include name="cglib*.jar"/>
    <include name="commons-*.jar"/>
    <include name="context*.jar"/>
    <include name="displaytag*.jar"/>
    <include name="dom4j*.jar"/>
    <include name="hibernate*.jar"/>
    <include name="joda-time*.jar"/>
    <include name="jstl*.jar"/>
    <include name="jta*.jar"/>
    <include name="log4j*.jar"/>
    <include name="mail*.jar"/>
    <include name="mysql*.jar"/>
    <include name="persistence-api*.jar"/>
    <include name="quartz*.jar"/>
    <include name="spring*.jar"/>
    <include name="standard*.jar"/>
  </fileset>
  
  <path id="additional-test-classpath">
    <pathelement location="${conf.dir}"/>
  </path>
  
  <path id="compile-classpath">
    <fileset refid="lib.fileset"/>
    <fileset dir="${lib.dir}">
      <include name="servlet*.jar"/>
    </fileset>
  </path>
  
  <target name="generate-ddl" depends="build-jar">
    <taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask"
      classpathref="compile-classpath"/>
    
    <!-- by default we don't actually create db unless previous caller sets this property to true -->
    <property name="db.export" value="false"/>
    
    <hibernatetool destdir="${build.dir}">
      <!-- this must ONLY contain our classes, nothing hibernate related -->
      <classpath>
        <pathelement location="${dist.dir}/${jar.file}"/>
      </classpath>
      
      <annotationconfiguration propertyfile="${hibernate.properties}"
        configurationfile="${hibernate.conf.file}"/>
      <hbm2ddl export="${db.export}" drop="true" outputfilename="tasks.ddl" haltonerror="false"/>
    </hibernatetool>
  </target>
  
  <target name="create-db">
    <property name="db.export" value="true"/>
    <antcall target="generate-ddl"/>
  </target>
  
  <target name="load-data">
    <property file="${hibernate.properties}"/>
    <sql classpathref="compile-classpath" driver="${hibernate.connection.driver_class}"
      url="${hibernate.connection.url}" userid="${hibernate.connection.username}"
      password="${hibernate.connection.password}" src="${sql.src.dir}/base_data.sql"/>
  </target>
  
  <target name="load-test-data">
    <property file="${hibernate.properties}"/>
    <sql classpathref="compile-classpath" driver="${hibernate.connection.driver_class}"
      url="${hibernate.connection.url}" userid="${hibernate.connection.username}"
      password="${hibernate.connection.password}" src="${test.data.dir}/test_data.sql"/>
  </target>
  
  <target name="build-war" depends="generate-ddl">
    
    <war destfile="${dist.dir}/${war.file}" webxml="${conf.dir}/web.xml">
      <manifest>
        <attribute name="Build-Version" value="${version}"/>
        <attribute name="Build-DateTime" value="${BUILD-DATETIME}"/>
      </manifest>
      
      <!-- files which are used in includes but should be kept under WEB-INF so not public -->
      <webinf dir="${src.dir}">
        <include name="jsp/**/*"/>
        <include name="bin/**/*"/>
        <!--exclude name="jsp/index.jsp"/-->
      </webinf>
    
      <!-- JSP files which are public -->      
      <!--fileset dir="${jsp.src.dir}">
        <include name="index.jsp"/>
      </fileset-->
      
      <webinf dir="${conf.dir}">
        <include name="tasks-servlet.xml"/>
        <include name="applicationContext.xml"/>
      </webinf>
      
      <fileset dir="${html.src.dir}">
        <include name="**/*.html"/>
        <include name="logs"/>
      </fileset>
      
      <fileset dir="${src.dir}">
        <include name="css/**/*"/>
        <include name="javascript/**/*"/>
      </fileset>
      
      <classes dir="${conf.dir}">
        <include name="hibernate.cfg.xml"/>
        <include name="log4j.xml"/>
        <include name="messages.properties"/>
      </classes>

      <lib refid="lib.fileset"/>
      <lib dir="${dist.dir}">
        <include name="${jar.file}"/>
      </lib>
    </war>
  </target>
  
  <target name="build-tgz" depends="build-war"
    description="Builds a .tgz file containing the app war file and DB creation scripts">
    <tar destfile="${dist.dir}/${tgz.file}" compression="gzip">
      <tarfileset prefix="${ant.project.name}" dir="${dist.dir}">
        <include name="${war.file}"/>
      </tarfileset>
      
      <tarfileset prefix="${ant.project.name}" dir="${bin.dir}" mode="755" includes="*.sh"/>
      
      <tarfileset prefix="${ant.project.name}" dir="${build.dir}" includes="*.ddl"/>
      
      <tarfileset prefix="${ant.project.name}" dir="${sql.src.dir}" includes="*.sql"/>
      
      <tarfileset prefix="${ant.project.name}" dir="${conf.dir}">
        <include name="*.properties.example"/>
      </tarfileset>
    </tar>
  </target>
  
  <!-- deploys just the jsp, html etc to an already deployed web-app, useful during development -->
  <target name="deploy-jsp">
    <copy todir="${deploy.dir}/${ant.project.name}/WEB-INF/jsp" verbose="true">
      <fileset dir="${jsp.src.dir}">
        <include name="**/*.jsp"/>
      </fileset>
    </copy>
    
    <copy todir="${deploy.dir}/${ant.project.name}" verbose="true">
      <fileset dir="${html.src.dir}">
        <include name="**/*.html"/>
      </fileset>
    </copy>
    
    <copy todir="${deploy.dir}/${ant.project.name}/css" verbose="true">
      <fileset dir="${css.src.dir}">
        <include name="*.css"/>
      </fileset>
    </copy>
    
    <copy todir="${deploy.dir}/${ant.project.name}/javascript" verbose="true">
      <fileset dir="${javascript.src.dir}">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>
  
  <target name="build" depends="build-tgz"/>
  
  <target name="undeploy" depends="undeploy-war"/>
  
  <target name="undeploy-war" description="Undeploy war from deployment location">
    <delete file="${war.deploy.dir}/${war.file}" verbose="true"/>
  </target>
  
  <target name="init-integration">
    <copy file="${test.conf.dir}/citrine.properties.hudson"
      tofile="${test.conf.dir}/citrine.properties"/>
    <copy file="${test.conf.dir}/log4j.xml.hudson" tofile="${test.conf.dir}/log4j.xml"/>
  </target>
  
  <target name="build-integration" depends="init-integration, create-db, all"/>
  
</project>