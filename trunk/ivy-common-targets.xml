<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2009 Last.fm Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied. See the License for the specific language governing permissions and limitations under the
    License.
  -->
<project name="ivy-common-targets" xmlns:ivy="antlib:org.apache.ivy.ant" default="retrieve">

  <!-- the following properties can be overwritten in your build.properties if necessary -->

  <!-- where ivy should look to find files you want to publish (i.e. where you build them to) -->
  <property name="ivy.distrib.dir" value="build/dist" />
  <!-- whether you want to publish ivy.xml -->
  <property name="publish.publishivy" value="true" />
  <!-- the status of what is being published (e.g. release, integration, test etc.) -->
  <property name="publish.status" value="release" />
  <!-- whether a publish should be allowed to overwrite an existing publication -->
  <property name="publish.overwrite" value="false" />
  <!-- the name of the file under ${ivysettings.dir} which contains the ivy settings -->
  <property name="ivysettings.file.name" value="ivysettings.xml" />

  <target name="clean-cache" if="ivy.clean.cache">
    <ivy:cleancache />
  </target>

  <target name="ivy-init" description="Initialise ivy by loading ivysettings.xml" unless="ivy.initialised">
    <ivy:settings file="${ivysettings.dir}/${ivysettings.file.name}" />
    <ivy:resolve file="ivy.xml" />
    <property name="ivy.initialised" value="true" />
  </target>

  <target name="retrieve" depends="clean-cache, ivy-init" description="Retrieve dependencies with ivy" unless="ivy.skip.retrieve">
    <ivy:retrieve pattern="${ivy.lib.dir}/[module]-[artifact].[ext]" type="jar" />
  </target>

  <target name="report" depends="retrieve" description="Generates a report of dependencies">
    <ivy:report todir="${build.dir}" />
  </target>

  <!--  	this target should be overridden if you don't have a jar target 
  or you want to publish more than just a single jar file -->
  <target name="publish" depends="clean-cache,buildnumber, dist" description="Publish a jar generated by this project to the Ivy repository">

    <tstamp>
      <format property="publish.date" pattern="yyyyMMddHHmmss" />
    </tstamp>
    <property name="publish.revision" value="${version}" />
    <delete file="${ivy.distrib.dir}/ivy.xml" />
    <ivy:publish artifactspattern="${ivy.distrib.dir}/[artifact].[ext]" resolver="ivysvn" pubrevision="${publish.revision}" pubdate="${publish.date}" status="${publish.status}" publishivy="${publish.publishivy}" overwrite="${publish.overwrite}" forcedeliver="true" />
    <echo message="project ${ant.project.name} released with version ${publish.revision}" />
  </target>

  <!-- you must either overwrite this target in your build, or implement your own build-jar target -->
  <target name="dist" depends="build-jar" />

  <target name="build-jar" />

  <!-- for backward compatability -->
  <target name="jar" depends="build-jar" />

  <target name="buildnumber" depends="ivy-init" unless="version" description="Calculates version number">
    <echo message="Calculating version number for organisation=${ivy.organisation} and module=${ivy.module}" />
    <ivy:buildnumber organisation="${ivy.organisation}" module="${ivy.module}" />
    <property name="version" value="${ivy.new.revision}" />
    <echo message="Found current ivy.revision: ${ivy.revision}" />
    <echo message="Creating new ivy.new.revision: ${ivy.new.revision}" />
  </target>

</project>